pico-8 cartridge // http://www.pico-8.com
version 32
__lua__
--main

function _init()
	state=0
	dir={{-1,0},{1,0},{0,-1},{0,1}}
	currentplayer={}
	currentobjects={}
	moves={}
 l0={117,119,135}
 loadlevel(state)
end

function _update60()
	--if state==-1 then
	if state==0 then
		if btnp(4) then
			loadlevel(state)
		end
		if btnp(5) then
			rewind()
		end
		moveplayer()
		updatewin()
		if checkwin() then
			state="win"
		end
	--elseif state==-2 then
	end		
end

function _draw()
	cls()
	--if state==-1 then
	if state==0 then
		map(0,0,0,0)
		drawplayer(currentplayer)
		drawobjects(currentobjects)
	--elseif state==-2 then
	end
end
-->8
--load

function loadlevel(number)
 if number==0 then
 	parseleveldata(l0)
 else
 	parseleveldata({0,0})
 end
end

function parseleveldata(entities)
 currentobjects={}
 for k,v in pairs(entities) do
 	truepos={x=(v%16),y=flr(v/16)}
 	if k==1 then
 		currentplayer=truepos
 	else
 		add(currentobjects,truepos)
 	end
 end
end
-->8
--move

function moveplayer()
	for b=0,3 do
		if btnp(b) then
			add(moves,b)
			newx=currentplayer.x+dir[b+1][1]
			newy=currentplayer.y+dir[b+1][2]
			if checkwalls(newx,newy) then
				if checkobjects(newx,newy,b) then
			 	currentplayer.x=newx
			 	currentplayer.y=newy
			 end
			end
		end
	end
end

function rewindmoveplayer(b)
	newx=currentplayer.x+dir[b+1][1]
	newy=currentplayer.y+dir[b+1][2]
	if checkwalls(newx,newy) then
		if checkobjects(newx,newy,b) then
	 	currentplayer.x=newx
	 	currentplayer.y=newy
	 end
	end
end

function checkwalls(x,y)
	if fget(mget(x,y),0) then
	 return false
	end
	return true
end

function checkobjects(x,y,b)
	exists=false
	for k,v in pairs(currentobjects) do
	 if v.x==x and v.y==y then
	  	exists=true
	 end
	end
	if exists then
	 destx = x+dir[b+1][1]
	 desty = y+dir[b+1][2]
		for k,v in pairs(currentobjects) do
		 if v.x==destx and v.y==desty then
		  	return false
		 end
		end
		if not checkwalls(destx, desty) then
		 return false
		end
		for k,v in pairs(currentobjects) do
	 	if v.x==x and v.y==y then
	  	v.x=x+dir[b+1][1]
	  	v.y=y+dir[b+1][2]
	 	end
	 end
	end
	return true
end
-->8
--draw

function drawplayer(player)
	spr(2,player.x*8,player.y*8)
end

function drawobjects(objects)
	for k,v in pairs(objects) do
		spr(3,v.x*8,v.y*8)
	end
end
-->8
--gamestate

function rewind()
	loadlevel(state)
	deli(moves, #moves)
	for k,v in pairs(moves) do
		rewindmoveplayer(v)
	end
end

function updatewin()
	for x=0,15 do
		for y=0,15 do
			cspr = mget(x,y)
			if cspr==5 or cspr==6 then
				exists=false
				for k,v in pairs(currentobjects) do
				 if v.x==x and v.y==y then
				  exists=true
				 end
				end
				if exists then
					mset(x,y,6)
				else
					mset(x,y,5)
				end
			end
		end
	end
end

function checkwin()
	for x=0,15 do
		for y=0,15 do
			if mget(x,y)==5 then
				return false
			end
		end
	end
	return true
end
__gfx__
00000000555555550000000000000000666666666686886666b6bb66000000000000000000000000000000000000000000000000000000000000000000000000
000000005555555500000000044444406666666686666668b666666b000000000000000000000000000000000000000000000000000000000000000000000000
00000000555555550000e0000444444066666666666666686666666b000000000000000000000000000000000000000000000000000000000000000000000000
0000000055555555000eee00044444406666666686666666b6666666000000000000000000000000000000000000000000000000000000000000000000000000
00000000555555550000e0000444444066666666666666686666666b000000000000000000000000000000000000000000000000000000000000000000000000
0000000055555555000ee000044444406666666686666666b6666666000000000000000000000000000000000000000000000000000000000000000000000000
000000005555555500e00e00044444406666666686666668b666666b000000000000000000000000000000000000000000000000000000000000000000000000
00000000555555550000000000000000666666666688686666bb6b66000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0001000300040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0104040404040404040404040404040100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0104040404040404040404040404040100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0104040404040404040404040404040100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0104040404040404040404040404040100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0104040404040404040404040404040100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0104040404040404040404040404040100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0104040404040404010504040404040100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0104040404040404040404040404040100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0104040404040404040504040404040100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0104040404040404040404040404040100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0104040404040404040404040404040100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0104040404040404040404040404040100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0104040404040404040404040404040100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0104040404040404040404040404040100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
