pico-8 cartridge // http://www.pico-8.com
version 32
__lua__
--main

function _init()
	t=0
	nolevels=2
	state=1
	dir={{-1,0},{1,0},{0,-1},{0,1}}
	currentplayer={}
	currentobjects={}
	moves={}
	bonds={}
 l0={133,135,151}
 l1={170,134,168}
 loadlevel(state)
end

function _update60()
	if state==-1 then
		for b=0,5 do
			if btnp(b) then
				while fadeanim do
					fadeout()
				end
				state=0
				loadlevel(state)
				fadein()
			end
		end
	elseif state==-2 then
		for b=0,5 do
			if btnp(b) then
				while fadeanim do
					fadeout()
				end
				state=0
				loadlevel(state)
				fadein()
			end
		end
	elseif state==-3 then
	 levelselect()
	elseif state>=nolevels then
		state=-2
	elseif state>=0 then
		if btnp(4) then
			moves={}
   bonds={}
			loadlevel(state)
		end
		if btnp(5) then
			rewind()
		end
		moveinput()
		updatewin()
		if checkwin() then
			state+=1
			moves={}
   bonds={}
			loadlevel(state)
		end
	end
	t+=1
end

function _draw()
	cls()
	if state==-1 then
		title()
	elseif state==-2 then
	 gameover()	
	elseif state>=0 then
		map(16*state,0,0,0)
		drawplayer(currentplayer)
		drawobjects(currentobjects)
	end
	for k,bond in pairs(bonds) do
		for i,num in pairs(bond) do
		 print(num,0,i*10,7)
		end
	end
end
-->8
--load

function loadlevel(level)
 if level==0 then
 	parseleveldata(l0)
 elseif level==1 then
 	parseleveldata(l1)
 else
 	parseleveldata({0,0})
 end
end

function parseleveldata(entities)
 currentobjects={}
 for k,v in pairs(entities) do
 	truepos={x=(v%16),y=flr(v/16)}
 	if k==1 then
 		currentplayer=truepos
 	else
 		add(currentobjects,truepos)
 	end
 end
end
-->8
--move

function moveinput()
	for b=0,3 do
		if btnp(b) then
			add(moves,b)
			moveplayer(b)
			checkbonds()
		end
	end
end

function moveplayer(b)
	newx=currentplayer.x+dir[b+1][1]
	newy=currentplayer.y+dir[b+1][2]
	if checkwalls(newx,newy) then
		if checkobjects(newx,newy,b) then
	 	currentplayer.x=newx
	 	currentplayer.y=newy
	 end
	end
end

function checkwalls(x,y)
	if fget(mget((state*16)+x,y),0) then
	 return false
	end
	return true
end

function checkobjects(x,y,b)
	exists=false
	for k,v in pairs(currentobjects) do
	 if v.x==x and v.y==y then
	  	exists=true
	 end
	end
	if exists then
	 destx = x+dir[b+1][1]
	 desty = y+dir[b+1][2]
		for k,v in pairs(currentobjects) do
		 if v.x==destx and v.y==desty then
		  	return false
		 end
		end
		if not checkwalls(destx, desty) then
		 return false
		end
		for k,v in pairs(currentobjects) do
	 	if v.x==x and v.y==y then
	  	v.x=x+dir[b+1][1]
	  	v.y=y+dir[b+1][2]
	 	end
	 end
	end
	return true
end

function checkbonds()
	for k,v in pairs(currentobjects) do
		if istile(v.x,v.y,7) then
			if istile(v.x+1,v.y,7) and hasobject(v.x+1,v.y) then
				for l,w in pairs(currentobjects) do
					if w.x==v.x+1 and w.y==v.y then
						addbond(k,l)
					end
				end
			end
			if istile(v.x,v.y+1,7) and hasobject(v.x,v.y+1) then
				for l,w in pairs(currentobjects) do
					if w.x==v.x and w.y==v.y+1 then
						addbond(k,l)
					end
				end
			end
		end
	end
end
-->8
--draw

function drawplayer(player)
	spr(2,player.x*8,player.y*8)
end

function drawobjects(objects)
	for k,v in pairs(objects) do
		spr(3,v.x*8,v.y*8)
	end
end

function title()
	print("gmtk game jam 2021",
  17,10,8+(t/6)%10)
 print("gmtk game jam 2021",
  18,10,7)
 print("sokoban",18,20,7)
 print("press any key to start",
 	18,30,7)
end

function gameover()
	print("all levels complete!",18,20,7)
 print("press any key to start again",
 	18,30,7)
end

function levelselect()
	print("idk do this later")
end
-->8
--gamestate

function addbond(k,l)
	add(bonds, {k,l})
end

function rewind()
	bonds={}
	loadlevel(state)
	deli(moves, #moves)
	for k,v in pairs(moves) do
		moveplayer(v)
	end
end

function updatewin()
	for x=0,15 do
		for y=0,15 do
			cspr = mget((state*16)+x,y)
			if cspr==5 or cspr==6 then
				exists=false
				for k,v in pairs(currentobjects) do
				 if v.x==x and v.y==y then
				  exists=true
				 end
				end
				if exists then
					mset((state*16)+x,y,6)
				else
					mset((state*16)+x,y,5)
				end
			end
		end
	end
end

function checkwin()
	for x=0,15 do
		for y=0,15 do
			if mget((state*16)+x,y)==5 then
				return false
			end
		end
	end
	return true
end
-->8
--animation

function fadeout()
	dpal={0,1,1, 2,1,13,6,
       4,4,9,3, 13,1,13,14}
	for i=0,40 do
  for j=1,15 do
   col = j
   for k=1,((i+(j%5))/4) do
    col=dpal[col]
   end
   pal(j,col,1)
  end
  flip()
 end
end

function fadein()
	pal()
end
-->8
--helpers

function hasobject(x,y)
	for k,v in pairs(currentobjects) do
	 if v.x==x and v.y==y then
	  	return true
	 end
	end
	return false
end

function istile(x,y,tile)
	return mget((state*16)+x,y)==tile
end
__gfx__
00000000555555550000000000000000666666666686886666b6bb6666c6cc660000000000000000000000000000000000000000000000000000000000000000
000000005555555500000000044444406666666686666668b666666bc666666c0000000000000000000000000000000000000000000000000000000000000000
00000000555555550000e0000444444066666666666666686666666b666cc66c0000000000000000000000000000000000000000000000000000000000000000
0000000055555555000eee00044444406666666686666666b6666666c6cccc660000000000000000000000000000000000000000000000000000000000000000
00000000555555550000e0000444444066666666666666686666666b66cccc6c0000000000000000000000000000000000000000000000000000000000000000
0000000055555555000ee000044444406666666686666666b6666666c66cc6660000000000000000000000000000000000000000000000000000000000000000
000000005555555500e00e00044444406666666686666668b666666bc666666c0000000000000000000000000000000000000000000000000000000000000000
00000000555555550000000000000000666666666688686666bb6b6666cc6c660000000000000000000000000000000000000000000000000000000000000000
__gff__
0001000300040408000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0101010101010101010101010101010101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101010404050101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101040404010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101040404040101010104040404040101010101010107070404010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101040404040404040404040504040101010101010107070401010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101040404040404040404040404040101010101010104040101040401010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101040404040101010105040404040101010101010104040404040401010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101040404040101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
